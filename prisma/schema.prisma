// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String
  password  String
  createdAt DateTime? @default(now())
  Team      Team[]
  Order     Order[]
}

model Company {
  id           String         @id @default(uuid())
  name         String
  createdAt    DateTime?      @default(now())
  Team         Team[]
  plan         Plan           @relation(fields: [planId], references: [id])
  planId       String
  Subscription Subscription[]
  Product      Product[]
  Inventory    Inventory[]
  Order        Order[]
  OrderLine    OrderLine[]
}

model Team {
  id        String   @id @default(uuid())
  role      TeamRole
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Plan {
  id           String         @id @default(uuid())
  name         String
  price        Float
  duration     Int //in month
  createdAt    DateTime?      @default(now())
  Company      Company[]
  Subscription Subscription[]
}

model Subscription {
  id        String    @id @default(uuid())
  company   Company   @relation(fields: [companyId], references: [id])
  companyId String
  plan      Plan      @relation(fields: [planId], references: [id])
  planId    String
  expiredAt DateTime? @default(now())
  createdAt DateTime? @default(now())
}

model Product {
  id        String      @id @default(uuid())
  name      String
  price     String
  createdAt DateTime?   @default(now())
  company   Company     @relation(fields: [companyId], references: [id])
  companyId String
  Inventory Inventory[]
  OrderLine OrderLine[]
}

model Inventory {
  id          String      @id @default(uuid())
  transaction Transaction
  quantity    Int
  product     Product     @relation(fields: [productId], references: [id])
  productId   String
  company     Company     @relation(fields: [companyId], references: [id])
  companyId   String
  createdAt   DateTime?   @default(now())
}

model Order {
  id          String      @id @default(uuid())
  createdAt   DateTime?   @default(now())
  createdBy   User        @relation(fields: [createdById], references: [id])
  createdById String
  company     Company     @relation(fields: [companyId], references: [id])
  companyId   String
  OrderLine   OrderLine[]
}

model OrderLine {
  id        String    @id @default(uuid())
  product   Product   @relation(fields: [productId], references: [id])
  productId String
  order     Order     @relation(fields: [orderId], references: [id])
  orderId   String
  company   Company   @relation(fields: [companyId], references: [id])
  companyId String
  createdAt DateTime? @default(now())
}

enum Transaction {
  IN
  OUT
}

enum TeamRole {
  ADMIN
  STAFF
}
